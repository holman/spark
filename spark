#!/usr/bin/env bash
#
# original spark by
# https://github.com/holman/spark
#
# Generates sparklines for a set of data.
#
# Here's a a good web-based sparkline generator that was a bit of inspiration
# for spark:
#
#   https://datacollective.org/sparkblocks
#
# spark takes a comma-separated list of data and then prints a sparkline out of
# it.
#
# Examples:
#
#   spark 1,5,22,13,53
#   # => ▁▁▃▂▇
#
#   spark 0,30,55,80,33,150
#   # => ▁▂▃▅▂▇
#
#   spark -h
#   # => Prints the spark help text.

# Prints the help text for spark.
help()
{
	cat <<EOF

  USAGE:
    spark VALUE,...

  EXAMPLES:
    spark 1,5,22,13,53
    ▁▁▃▂▇
    spark 0,30,55,80,33,150
    ▁▂▃▅▂▇
EOF
}

# Generates sparklines.
#
# @param ... - data
spark()
{
	local n numbers=

	# find min/max values
	local min=0xffffffff max=0

	for n in ${@//,/ }
	do
		# on Linux (or with bash4) we could use `printf %.0f $n` here to
		# round the number but that doesn't work on OS X (bash3) nor does
		# `awk '{printf "%.0f",$1}' <<< $n` work, so just cut it off
		n=${n%.*}
		(( n < min )) && min=$n
		(( n > max )) && max=$n
		numbers=$numbers${numbers:+ }$n
	done

	# print ticks
	local ticks=(▁ ▂ ▃ ▄ ▅ ▆ ▇ █)
	local f=$(( (($max-$min)<<8)/(${#ticks[@]}-1) ))
	(( f < 1 )) && f=1

	for n in $numbers
	do
		echo -n ${ticks[$(( ((($n-$min)<<8)/$f) ))]}
	done
	echo
}

[ "$1" == '-h' ] && {
	help
	exit
}

spark ${@:-`cat`}
